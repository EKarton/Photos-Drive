##################################################################
# A Github action used to publish cli client to PyPI
# More info at https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
##################################################################

name: Publish CLI Client to PyPI
on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "2.0.0"

      - name: Get local version from pyproject.toml
        id: get-version
        run: |
          cd ./apps/cli-client
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Check if version already exists on PyPI
        id: check-pypi
        run: |
          PACKAGE_NAME=$(poetry version | awk '{print $1}')
          VERSION=${{ steps.get-version.outputs.version }}
          RESPONSE=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json)
          if echo "$RESPONSE" | jq -e ".releases[\"$VERSION\"]" >/dev/null; then
            echo "Version $VERSION already exists on PyPI. Skipping publish."
            echo "publish=false" >> $GITHUB_OUTPUT
          else
            echo "publish=true" >> $GITHUB_OUTPUT
          fi
        working-directory: ./apps/cli-client

      - name: Publish to PyPI
        if: steps.check-pypi.outputs.publish == 'true'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          cd ./apps/cli-client
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
